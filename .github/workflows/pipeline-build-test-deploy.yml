name: Dual Job Date Build Deploy

on:
  push:
    branches:
      - cicd/notification
  pull_request:
    branches:
      - cicd/notification
  release:
    types: [ created ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Simulated Failure
        run: exit 1
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:ci

      - name: Archive application
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Convert to lowercase
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME@L}" >> "${GITHUB_ENV}"
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-develop

  create_issue_on_failure:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    permissions:
      contents: read
      issues: write
    if: ${{ failure() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Issue
        id: create_issue
        uses: imjohnbo/issue-bot@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Failure Detected in ${{ github.workflow }}"
          body: |
            **Failure Details:**
            - **Workflow Name**: ${{ github.workflow }}
            - **Branch**: ${{ github.ref_name }}
            - **Commit**: ${{ github.sha }}
            - **Author**: ${{ github.actor }}
            - **Failed Job Link**: [View Detailed Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          labels: |
            bug

      - name: Assign Issue
        if: ${{ steps.create_issue.outputs.issue-number }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/issues/${{ steps.create_issue.outputs.issue-number }}/assignees
          assignees: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}