name: Dual Job Date Build Deploy

on:
  push:
    branches:
      - feature/ci-containerization
  workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                node-version: 20
                cache: 'npm'

            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-npm-
                  ${{ runner.os }}-

            - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
              name: List the state of node modules
              continue-on-error: true
              run: npm list

            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run build:ci

            - name: Archive application
              uses: actions/upload-artifact@v4
              with:
                name: dist
                path: dist/

    deploy:
        needs: build
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v4
            - name: Convert to lowercase
              run: |
                echo "IMAGE_NAME=${IMAGE_NAME@L}" >> "${GITHUB_ENV}"
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                name: dist
                path: dist
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                context: .
                push: true
                tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-develop

